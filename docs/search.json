[
  {
    "objectID": "Week 3 - Control Flow Practice and Function Writing.html",
    "href": "Week 3 - Control Flow Practice and Function Writing.html",
    "title": "Week 3 - Logicals, Loops, Vectorized Functions, and Writing Functions",
    "section": "",
    "text": "Loaded in .rda file to use for HW 3.\n\n\nload(\"hw2_list.rda\")"
  },
  {
    "objectID": "Week 3 - Control Flow Practice and Function Writing.html#setting-up-our-environment.",
    "href": "Week 3 - Control Flow Practice and Function Writing.html#setting-up-our-environment.",
    "title": "Week 3 - Logicals, Loops, Vectorized Functions, and Writing Functions",
    "section": "",
    "text": "Loaded in .rda file to use for HW 3.\n\n\nload(\"hw2_list.rda\")"
  },
  {
    "objectID": "Week 3 - Control Flow Practice and Function Writing.html#task-1-control-flow-practice",
    "href": "Week 3 - Control Flow Practice and Function Writing.html#task-1-control-flow-practice",
    "title": "Week 3 - Logicals, Loops, Vectorized Functions, and Writing Functions",
    "section": "Task 1: Control Flow Practice",
    "text": "Task 1: Control Flow Practice\n\n1. Characterized post-treatment bp (blood pressure) measurement as optimal (bp &lt;= 120), borderline (120 &lt; bp &lt;= 130), and high (bp &gt; 130). Created new column in each data frame (treatment and placebo) called status.\n\nbp_list$treatment$status &lt;- character(20)\nbp_list$placebo$status &lt;- character(10)\nbp_list\n\n$treatment\n              patient pre_bp post_bp diff_bp normal status\nSubject_1   Subject_1    120     127      -7  FALSE       \nSubject_2   Subject_2    151     145       6  FALSE       \nSubject_3   Subject_3    125     135     -10  FALSE       \nSubject_4   Subject_4    126     122       4  FALSE       \nSubject_5   Subject_5    115     115       0   TRUE       \nSubject_6   Subject_6    132     122      10  FALSE       \nSubject_7   Subject_7    132     123       9  FALSE       \nSubject_8   Subject_8    129     126       3  FALSE       \nSubject_9   Subject_9    134     126       8  FALSE       \nSubject_10 Subject_10    139     129      10  FALSE       \nSubject_11 Subject_11    127     132      -5  FALSE       \nSubject_12 Subject_12    122     146     -24  FALSE       \nSubject_13 Subject_13    127     120       7  FALSE       \nSubject_14 Subject_14    135     114      21   TRUE       \nSubject_15 Subject_15    133     121      12  FALSE       \nSubject_16 Subject_16    128     120       8  FALSE       \nSubject_17 Subject_17    147     128      19  FALSE       \nSubject_18 Subject_18    138     120      18  FALSE       \nSubject_19 Subject_19    140     133       7  FALSE       \nSubject_20 Subject_20    132     115      17   TRUE       \n\n$placebo\n      patient pre_bp post_bp diff_bp normal status\n1   Subject_1    138     105      33   TRUE       \n2   Subject_2    135     136      -1  FALSE       \n3   Subject_3    147     123      24  FALSE       \n4   Subject_4    117     130     -13  FALSE       \n5   Subject_5    152     134      18  FALSE       \n6   Subject_6    134     143      -9  FALSE       \n7   Subject_7    114     135     -21  FALSE       \n8   Subject_8    121     139     -18  FALSE       \n9   Subject_9    131     120      11  FALSE       \n10 Subject_10    130     124       6  FALSE       \n\n\n\n\n2. Created a for loop and if/then/else logic to create the status column’s values for the non-placebo (treatment) data frame.\n\nfor (i in 1:nrow(bp_list$treatment)) {\n  bp2 &lt;- bp_list$treatment$post_bp[i]\n  \n  if (bp2 &lt;= 120) {\n  bp_list$treatment$status[i] = \"optimal\"\n} else if (bp2 &gt; 120 & bp2 &lt;= 130) {\n  bp_list$treatment$status[i] = \"borderline\"\n} else {\n  bp_list$treatment$status[i] = \"high\"\n}\n}\n\nbp_list$treatment\n\n              patient pre_bp post_bp diff_bp normal     status\nSubject_1   Subject_1    120     127      -7  FALSE borderline\nSubject_2   Subject_2    151     145       6  FALSE       high\nSubject_3   Subject_3    125     135     -10  FALSE       high\nSubject_4   Subject_4    126     122       4  FALSE borderline\nSubject_5   Subject_5    115     115       0   TRUE    optimal\nSubject_6   Subject_6    132     122      10  FALSE borderline\nSubject_7   Subject_7    132     123       9  FALSE borderline\nSubject_8   Subject_8    129     126       3  FALSE borderline\nSubject_9   Subject_9    134     126       8  FALSE borderline\nSubject_10 Subject_10    139     129      10  FALSE borderline\nSubject_11 Subject_11    127     132      -5  FALSE       high\nSubject_12 Subject_12    122     146     -24  FALSE       high\nSubject_13 Subject_13    127     120       7  FALSE    optimal\nSubject_14 Subject_14    135     114      21   TRUE    optimal\nSubject_15 Subject_15    133     121      12  FALSE borderline\nSubject_16 Subject_16    128     120       8  FALSE    optimal\nSubject_17 Subject_17    147     128      19  FALSE borderline\nSubject_18 Subject_18    138     120      18  FALSE    optimal\nSubject_19 Subject_19    140     133       7  FALSE       high\nSubject_20 Subject_20    132     115      17   TRUE    optimal\n\n\n\n\n3. Created a for loop and if/then/else logic to create the status column’s values for the placebo data frame.\n\nfor (i in 1:nrow(bp_list$placebo)) {\n  bp3 &lt;- bp_list$placebo$post_bp[i]\n  \n  if (bp3 &lt;= 120) {\n  bp_list$placebo$status[i] = \"optimal\"\n} else if (bp3 &gt; 120 & bp3 &lt;= 130) {\n  bp_list$placebo$status[i] = \"borderline\"\n} else {\n  bp_list$placebo$status[i] = \"high\"\n}\n}\n\nbp_list$placebo\n\n      patient pre_bp post_bp diff_bp normal     status\n1   Subject_1    138     105      33   TRUE    optimal\n2   Subject_2    135     136      -1  FALSE       high\n3   Subject_3    147     123      24  FALSE borderline\n4   Subject_4    117     130     -13  FALSE borderline\n5   Subject_5    152     134      18  FALSE       high\n6   Subject_6    134     143      -9  FALSE       high\n7   Subject_7    114     135     -21  FALSE       high\n8   Subject_8    121     139     -18  FALSE       high\n9   Subject_9    131     120      11  FALSE    optimal\n10 Subject_10    130     124       6  FALSE borderline"
  },
  {
    "objectID": "Week 3 - Control Flow Practice and Function Writing.html#task-2.function-writing",
    "href": "Week 3 - Control Flow Practice and Function Writing.html#task-2.function-writing",
    "title": "Week 3 - Logicals, Loops, Vectorized Functions, and Writing Functions",
    "section": "Task 2.Function Writing",
    "text": "Task 2.Function Writing\n\n1. Wrote a function that took a list with the two data frames, treatment and placebo, while taking an R function with the default value set to “mean” using my_fun &lt;- get(stat) (used get to search and retrieve “stat” argument). Then used my_fun to find the statistics of interest for both dataframes for columns (of pre, post, and diff). Afterwards, created sixvalues, a vector, to be returned as a names. Applied function to the list of dataframes without specifying the statistic and then with specifying the statistic as “var”, “sd”, “min”, and “max”.\n\nx &lt;- bp_list$treatment\ny &lt;- bp_list$placebo\nlist1 &lt;- list(x = x, y = y)\nworkingfunction &lt;- function(list1, stat = \"mean\") {\n  my_fun &lt;- get(stat)\n  \n  treatment_pre &lt;- my_fun(bp_list$treatment$pre_bp)\n  treatment_post &lt;- my_fun(bp_list$treatment$post_bp)\n  treatment_diff &lt;- my_fun(bp_list$treatment$diff_bp)\n  \n  placebo_pre &lt;- my_fun(bp_list$placebo$pre_bp)\n  placebo_post &lt;- my_fun(bp_list$placebo$post_bp)\n  placebo_diff &lt;- my_fun(bp_list$placebo$diff_bp)\n  \nsixvalues &lt;- c(treatment_pre, treatment_post, treatment_diff, placebo_pre, placebo_post, placebo_diff)\n  names(sixvalues) &lt;- c(\n  paste(\"treatment_pre\", stat, sep = \"_\"),\n  paste(\"treatment_post\", stat, sep = \"_\"),\n  paste(\"treatment_diff\", stat, sep = \"_\"),\n  paste(\"placebo_pre\", stat, sep = \"_\"),\n  paste(\"placebo_post\", stat, sep = \"_\"),\n  paste(\"placebo_diff\", stat, sep = \"_\")\n)\n  return(sixvalues)\n}\n\nwithoutspecifyingstat &lt;- workingfunction(list1)\nwithoutspecifyingstat\n\n treatment_pre_mean treatment_post_mean treatment_diff_mean    placebo_pre_mean \n             131.60              125.95                5.65              131.90 \n  placebo_post_mean   placebo_diff_mean \n             128.90                3.00 \n\nvar_stuff &lt;- workingfunction(list1, \"var\")\nvar_stuff\n\n treatment_pre_var treatment_post_var treatment_diff_var    placebo_pre_var \n          75.72632           78.99737          117.81842          149.87778 \n  placebo_post_var   placebo_diff_var \n         124.98889          341.33333 \n\nsd_stuff &lt;- workingfunction(list1, \"sd\")\nsd_stuff\n\n treatment_pre_sd treatment_post_sd treatment_diff_sd    placebo_pre_sd \n         8.702087          8.888046         10.854419         12.242458 \n  placebo_post_sd   placebo_diff_sd \n        11.179843         18.475209 \n\nmin_stuff &lt;- workingfunction(list1, \"min\")\nmin_stuff\n\n treatment_pre_min treatment_post_min treatment_diff_min    placebo_pre_min \n               115                114                -24                114 \n  placebo_post_min   placebo_diff_min \n               105                -21 \n\nmax_stuff &lt;- workingfunction(list1, \"max\")\nmax_stuff\n\n treatment_pre_max treatment_post_max treatment_diff_max    placebo_pre_max \n               151                146                 21                152 \n  placebo_post_max   placebo_diff_max \n               143                 33"
  }
]